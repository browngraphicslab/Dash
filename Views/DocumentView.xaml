<UserControl
    x:Name="This"
    x:Class="Dash.DocumentView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Dash"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance local:DocumentViewModel}"
    d:DesignWidth="400"
    d:DesignHeight="400"
    xmlns:localConverters="using:Dash.Converters"
    AllowDrop="True" DragOver="DocumentView_OnDragOver"
    DragEnter="DocumentView_OnDragOver" RightTapped="DocumentView_OnRightTapped"
    PointerPressed="DocumentView_OnPointerPressed"
    SizeChanged="DocumentView_OnSizeChanged">
    <UserControl.Resources>
        <Storyboard x:Name="FadeOut" Completed="FadeOut_Completed" SpeedRatio="0.7">
            <FadeOutThemeAnimation TargetName="This"></FadeOutThemeAnimation>
        </Storyboard>
        <local:BoolToBrushConverter x:Key="BoolToBrushConverter"/>
        <SolidColorBrush x:Key="DocumentBackground" Color="{ThemeResource DocumentBackgroundColor}"></SolidColorBrush>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot" Background="{Binding BackgroundBrush}">
        <!-- Main document view -->
        <Grid x:Name="OuterGrid" x:FieldModifier="public">
            <!-- Context flyout for right-click context menu; this opens automatically when the DocumentView grid is right clicked and is dismissed when anything else is clicked-->
            <Grid.ContextFlyout>
                <MenuFlyout x:Name = "xMenuFlyout">
                    <!-- There's a MenuFlyoutItem for each clickable item in the right click menu for DocumentViews; CollectionViews will add more items to this-->
                    <MenuFlyoutItem Text="Open" Click="MenuFlyoutItemOpen_OnClick" />
                    <MenuFlyoutItem Text="Delete" Icon="Delete" Click="MenuFlyoutItemDelete_Click"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem Text="Duplicate" Icon="Copy" Click="MenuFlyoutItemCopy_Click"/>
                    <MenuFlyoutItem Text="Alias" Click="MenuFlyoutItemAlias_Click"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem Text="Fields" Click="MenuFlyoutItemFields_Click"/>
                    <MenuFlyoutItem Text="Context" Click="MenuFlyoutItemContext_Click"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem Text="Screen capture" Click="MenuFlyoutItemScreenCap_Click"/>
                    <MenuFlyoutItem Text="Copy history to clipboard" Click="CopyHistory_Click"/>
                </MenuFlyout>
            </Grid.ContextFlyout>

            <!--Used to render the drop shadow and provide a background to the document-->
            <Canvas x:Name="xShadowHost" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <Rectangle x:Name="xDocumentBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent"/>

            <!--TODO this relative panel no longer needs to exist its original reason for existing is gone-->
           
                <Border x:Name="xTitleBorder" RelativePanel.AlignRightWithPanel="True" Background="Transparent" HorizontalAlignment="Left" Margin="-32 0 0 0" VerticalAlignment="Top" >
                    <TextBlock x:Name="xTitleIcon" 
                               FontFamily="{StaticResource FontAwesome}" 
                               Foreground="Transparent"
                               Text="{StaticResource DocumentPlainIcon}" 
                               HorizontalAlignment="Stretch"
                               Height="32"
                    />
            </Border>
            <RelativePanel x:Name="xMetadataPanel" 
                  VerticalAlignment="Top"
                  HorizontalAlignment="Left" SizeChanged="XMetadataPanel_OnSizeChanged"
                  >
            </RelativePanel>

            <!--grid to hold the inner content of the document-->
            <Grid Name="xTargetContentGrid">


                <!-- Container for document fields view -->
                <Grid x:Name="xFieldContainer" x:FieldModifier="public">
                    <FlyoutBase.AttachedFlyout >
                        <Flyout Placement="Bottom">
                            <TextBox Name="CmdLine" AcceptsReturn="True" Background="Yellow" Height="50" Width="200" TextChanged="CommandLine_TextChanged"  />
                        </Flyout>
                    </FlyoutBase.AttachedFlyout>
                    <ContentPresenter x:Name="xContentPresenter" x:FieldModifier="public" Grid.Row="0" Content="{Binding Content}" />
                </Grid>
                <!-- Dragger Button-->
                <Button x:Name="DraggerButton"
                        x:FieldModifier="public"
                        Margin="0,0,-20,-20"
                        HorizontalAlignment="Right"
                        AllowFocusOnInteraction="False"
                        AllowFocusWhenDisabled="False"
                        VerticalAlignment="Bottom"
                        ManipulationMode="TranslateX, TranslateY"
                        Visibility="Collapsed">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                        </ControlTemplate>
                    </Button.Template>
                    <Border Padding="10,10,20,20" Background="Transparent">
                        <Image x:Name="xDragImage" Source="ms-appx:///Assets/resize.png" Height="20" Opacity=".25" Margin="0,0,2,2" Stretch="None"
                                HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                    </Border>
                </Button>
            </Grid>

            <!--The selection border-->
            <Border Name="xSelectionBorder"/>

            <Border x:Name="xOperatorEllipseBorder" x:FieldModifier="public" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" Width="30" Height="30" Margin="0, 0, -30, 0">
                <Ellipse x:Name="OperatorEllipse"  Style="{StaticResource xFieldLinkHandle}"
                         Visibility="Collapsed"
                         CanDrag="True" DragStarting="OperatorEllipse_OnDragStarting" 
                         PointerEntered="OperatorEllipse_OnPointerEntered"
                         PointerExited="OperatorEllipse_OnPointerExited"/>
            </Border>

            <Canvas x:Name="xContextCanvas" HorizontalAlignment="Left" VerticalAlignment="Top">
                <HyperlinkButton                              
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Foreground="CornflowerBlue"
                    Content=""
                    Tapped="xContextLinkTapped"
                    VerticalContentAlignment="Center"
                    x:Name="xContextTitle"
                    Margin="0, 0, 15, 0"
                    Visibility="Collapsed"
                    SizeChanged="xContextHyperLinkSizechanged"/>
            </Canvas>
            
            <ProgressRing x:Name="xProgressRing" x:FieldModifier="public" Width="50" Height="50" IsActive="False" Visibility="Collapsed"/>
        </Grid>

    </Grid>
</UserControl>