<local:SelectionElement
    x:Name="This"
    x:Class="Dash.DocumentView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Dash"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance local:DocumentViewModel}"
    xmlns:localConverters="using:Dash.Converters"
    Width="{Binding Width}"
    Height="{Binding Height}"
    AllowDrop="True" DragOver="DocumentView_OnDragOver"
    DragEnter="DocumentView_OnDragOver" RightTapped="DocumentView_OnRightTapped">
    <UserControl.Resources>
        <Storyboard x:Name="FadeOut" Completed="FadeOut_Completed" SpeedRatio="0.7">
            <FadeOutThemeAnimation TargetName="This"></FadeOutThemeAnimation>
        </Storyboard>
        <localConverters:DocumentViewModelToStringConverter x:Key="DocumentViewModelToStringConverter" />
        <local:BoolToBrushConverter x:Key="BoolToBrushConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid x:Name="xKeyValPane" Width="0" Tapped="xKeyValPane_Tapped" ManipulationDelta="xKeyValPane_ManipulationDelta">
            <local:KeyValuePane x:Name="xKeyValuePane"></local:KeyValuePane>
        </Grid>

        <!-- Main document view -->
        <Grid x:Name="OuterGrid" x:FieldModifier="public" SizeChanged="OuterGrid_SizeChanged" BorderBrush="LightSteelBlue" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0"/>
            </Grid.ColumnDefinitions>

            <!-- Container for Icon view -->
            <Grid x:FieldModifier="public" x:Name="xIcon" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>

                <Image Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" x:Name="xIconImage" Height="64" HorizontalAlignment="Center" Width="64"  Source="ms-appx:///Assets/if_11_1724127.png" />
                <StackPanel x:Name="DocumentViewStackPanel" Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="1">
                    <TextBox  FontSize="11" MaxWidth="86" MinHeight="5"  Padding="1,4,0,0" TextWrapping="Wrap" x:Name="xIconLabel" 
                          HorizontalAlignment="Center"
                          TextAlignment="Center"
                          Background="Transparent"  BorderThickness="0"/>
                </StackPanel>
            </Grid>

            <!--canvas to hold the document view menu-->
            <Canvas x:Name="xMenuCanvas" Grid.Row="1" Grid.Column="1"></Canvas>

            <Canvas x:Name="xShadowHost"  Grid.RowSpan="2" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <Rectangle x:Name="xShadowTarget"  Grid.RowSpan="2" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                   Fill="{StaticResource DocumentBackground}" >
                <Rectangle.Resources>
                    <!-- Animate background color -->
                    <Storyboard x:Name="colorStoryboard">
                        <ColorAnimation Storyboard.TargetName="xShadowTarget" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                    From="#EFFFFFFF" To="#FFe8f0f6" Duration="0:0:0.075"/>
                    </Storyboard>
                    <Storyboard x:Name="colorStoryboardOut">
                        <ColorAnimation Storyboard.TargetName="xShadowTarget" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                    From="#FFe8f0f6" To="#EFFFFFFF" Duration="0:0:0.075"/>
                    </Storyboard>
                </Rectangle.Resources>
            </Rectangle>
            <Border x:Name="xGradientOverlay" Grid.RowSpan="2" Grid.ColumnSpan="2" Background="{StaticResource DocumentGradient}" Opacity=".2"></Border>

            <Border x:Name="xTitleBorder" Visibility="{Binding Path=HasTitle,Converter={StaticResource BoolToVisibilityConverter}}" Opacity=".75" HorizontalAlignment="Stretch" Background="Transparent" VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.RowSpan="1" BorderThickness="0,0,0,1" Height="25" Margin="5,-25,0,0" Padding="0,0,0,3">
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Padding="0,0,5,0">
                    <TextBlock x:Name="xTitleIcon" FontFamily="{StaticResource FontAwesome}" Foreground="{StaticResource TitleText}" Padding="0" Margin="0,3,4,0" FontSize="16" Text="{StaticResource DocumentPlainIcon}" />
                    <TextBox RequestedTheme="Light" Padding="0" Foreground="{StaticResource TitleText}" Background="Transparent" x:Name="xTitle" BorderThickness="0" FontSize="15" KeyDown="XTitle_OnKeyDown"></TextBox>
                </StackPanel>
            </Border>

            <!--grid to hold the inner content of the document-->
            <Grid Grid.Row="1" Grid.Column="0">
                <!-- Container for document fields view -->
                <Grid x:Name="xFieldContainer" x:FieldModifier="public">
                    <Grid.Clip>
                        <!--RectangleGeometry x:Name="xClipRect" Rect="0,0,300,300" /-->
                    </Grid.Clip>
                    <FlyoutBase.AttachedFlyout >
                        <Flyout Placement="Bottom">
                            <TextBox Name="CmdLine" AcceptsReturn="True" Background="Yellow" Height="50" Width="200" TextChanged="CommandLine_TextChanged"  />
                        </Flyout>
                    </FlyoutBase.AttachedFlyout>

                    <ContentPresenter x:Name="xContentPresenter" x:FieldModifier="public" Grid.Row="0" Content="{Binding Content}" />

                    <!--IsHitTestVisible="{Binding IsSelected}"-->
                </Grid>
                <!-- Dragger Button-->
                <Button x:Name="DraggerButton"
                    x:FieldModifier="public"
                    Margin="0,0,-20,-20"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    ManipulationMode="TranslateX, TranslateY"
                    Visibility="{Binding IsDraggerVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                        </ControlTemplate>
                    </Button.Template>
                    <Border Padding="10,10,20,20" Background="Transparent">
                        <Image x:Name="xDragImage" Source="ms-appx:///Assets/resize.png" Height="20" Opacity=".25" Margin="0,0,2,2" Stretch="None"
                           HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                    </Border>
                </Button>
            </Grid>
            <ProgressRing x:Name="xProgressRing" Grid.Row="1" Grid.Column="0" x:FieldModifier="public" Width="50" Height="50" IsActive="False" Visibility="Collapsed"/>

            <!--Rectangles that indicate whether document is a delegate or a copy-->
            <Grid x:Name="xDelegateStatusCanvas" VerticalAlignment="Top" Margin="0,-20,0,0"
                Visibility="{Binding Path=DocumentController.HasDelegatesOrPrototype, Converter={StaticResource BoolToVisibilityConverter}}" >
                <Canvas HorizontalAlignment="Right" Width="50" Canvas.Top="0">
                    <Rectangle Width="10" Height="10" Stroke="Gray" Canvas.Left="1" Canvas.Top="1"
                       Fill="{x:Bind Path=ViewModel.DocumentController.HasPrototype, Mode=OneWay, Converter={StaticResource BoolToBrushConverter}}"></Rectangle>
                    <Rectangle Width="10" Height="10" Stroke="Gray" Canvas.Left="12" Canvas.Top="1"
                       Fill="{x:Bind Path=ViewModel.DocumentController.HasPrototype, Mode=OneWay, Converter={StaticResource BoolToBrushConverter}}"></Rectangle>
                    <Rectangle Width="10" Height="10" Stroke="Gray" Canvas.Left="12" Canvas.Top="12"
                       Fill="{x:Bind Path=ViewModel.DocumentController.HasPrototype, Mode=OneWay, Converter={StaticResource BoolToBrushConverter}}"></Rectangle>
                    <Rectangle Width="10" Height="10" Stroke="Gray" Canvas.Left="1" Canvas.Top="12"
                       Fill="{x:Bind Path=ViewModel.DocumentController.HasPrototype, Mode=OneWay, Converter={StaticResource BoolToBrushConverter}}"></Rectangle>
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="45"></RotateTransform>
                            <ScaleTransform ScaleX="0.65" ScaleY="0.65"></ScaleTransform>
                        </TransformGroup>
                    </Canvas.RenderTransform>
                </Canvas>
            </Grid>
        </Grid>
    </Grid>
</local:SelectionElement>