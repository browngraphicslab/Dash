<local:SelectionElement
    x:Name="This"
    x:Class="Dash.DocumentView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Dash"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance local:DocumentViewModel}"
    d:DesignWidth="400"
    d:DesignHeight="400"
    xmlns:localConverters="using:Dash.Converters"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    AllowDrop="True" DragOver="DocumentView_OnDragOver"
    DragEnter="DocumentView_OnDragOver" RightTapped="DocumentView_OnRightTapped"
    PointerPressed="DocumentView_OnPointerPressed"
    SizeChanged="DocumentView_OnSizeChanged">
    <UserControl.Resources>
        <Storyboard x:Name="FadeOut" Completed="FadeOut_Completed" SpeedRatio="0.7">
            <FadeOutThemeAnimation TargetName="This"></FadeOutThemeAnimation>
        </Storyboard>
        <localConverters:DocumentViewModelToStringConverter x:Key="DocumentViewModelToStringConverter" />
        <local:BoolToBrushConverter x:Key="BoolToBrushConverter"/>
        <SolidColorBrush x:Key="DocumentBackground" Color="{ThemeResource DocumentBackgroundColor}"></SolidColorBrush>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot">
        <!-- Main document view -->
        <Grid x:Name="OuterGrid" x:FieldModifier="public">
            <!-- Context flyout for right-click context menu; this opens automatically when the DocumentView grid is right clicked and is dismissed when anything else is clicked-->
            <Grid.ContextFlyout>
                <MenuFlyout x:Name = "xMenuFlyout">
                    <!-- There's a MenuFlyoutItem for each clickable item in the right click menu for DocumentViews; CollectionViews will add more items to this-->
                    <MenuFlyoutItem Text="Delete" Icon="Delete" Click="MenuFlyoutItemDelete_Click"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem Text="Duplicate" Icon="Copy" Click="MenuFlyoutItemCopy_Click"/>
                    <MenuFlyoutItem Text="Alias" Click="MenuFlyoutItemAlias_Click"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem Text="Edit" Click="MenuFlyoutItemLayout_Click"/>
                    <MenuFlyoutItem Text="Open fields" Click="MenuFlyoutItemAdd_Click"/>
                    <MenuFlyoutItem Text="Context" Click="MenuFlyoutItemContext_Click"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem Text="Screen capture" Click="MenuFlyoutItemScreenCap_Click"/>
                    <MenuFlyoutItem Text="Copy history to clipboard" Click="CopyHistory_Click"/>
                </MenuFlyout>
            </Grid.ContextFlyout>

            <!--Used to render the drop shadow and provide a background to the document-->
            <Canvas x:Name="xShadowHost" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <Rectangle x:Name="xDocumentBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent"/>

            <RelativePanel x:Name="xMetadataPanel" 
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Left" SizeChanged="XMetadataPanel_OnSizeChanged"
                  >
                <Border x:Name="xTitleBorder" RelativePanel.AlignRightWithPanel="True" >
                    <TextBlock x:Name="xTitleIcon" 
                               DoubleTapped="xTitleIcon_DoubleTapped" 
                               FontFamily="{StaticResource FontAwesome}" 
                               Foreground="{ThemeResource TitleText}" 
                               FontSize="15" 
                               Text="{StaticResource DocumentPlainIcon}" 
                               HorizontalAlignment="Stretch"
                               Height="32"
                    />
                </Border>
                <Border RelativePanel.LeftOf="xTitleBorder" >
                    <TextBox PlaceholderText="Title" Text="" 
                             Padding="0, 5, 5, 0"
                             Foreground="{ThemeResource TitleText}" 
                             Background="Transparent" x:Name="xTitle" 
                             BorderThickness="0" FontSize="15" KeyDown="XTitle_OnKeyDown" 
                             LostFocus="XTitle_LostFocus"
                             MinWidth="150"
                             TextAlignment="Right"
                             VerticalContentAlignment="Center"
                             VerticalAlignment="Center"
                             Visibility="{Binding Path=HasTitle}"/>
                </Border>
                <Border 
                        x:Name="xContextTitleBorder"
                        RelativePanel.Below="xTitleBorder"
                        RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.AlignLeftWithPanel="True">
                    <TextBlock 
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             TextAlignment="Center"
                             Text="RelativePanel Class (Windows.UI.Xaml.Controls) - UWP app developer | Microsoft Docs"
                             Visibility="{Binding Path=ShowLocalContext}"/>
                </Border>
                <Border 
                    x:Name="xContextContentBorder"
                    RelativePanel.Below="xContextTitleBorder"
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.AlignLeftWithPanel="True"
                    >
                </Border>



            </RelativePanel>            
            
            <!--grid to hold the inner content of the document-->
            <Grid Name="xTargetContentGrid">


                <!-- Container for document fields view -->
                <Grid x:Name="xFieldContainer" x:FieldModifier="public">
                    <FlyoutBase.AttachedFlyout >
                        <Flyout Placement="Bottom">
                            <TextBox Name="CmdLine" AcceptsReturn="True" Background="Yellow" Height="50" Width="200" TextChanged="CommandLine_TextChanged"  />
                        </Flyout>
                    </FlyoutBase.AttachedFlyout>
                    <ContentPresenter x:Name="xContentPresenter" x:FieldModifier="public" Grid.Row="0" Content="{Binding Content}" />
                </Grid>
                <!-- Dragger Button-->
                <Button x:Name="DraggerButton"
                        x:FieldModifier="public"
                        Margin="0,0,-20,-20"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        ManipulationMode="TranslateX, TranslateY"
                        Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                        </ControlTemplate>
                    </Button.Template>
                    <Border Padding="10,10,20,20" Background="Transparent">
                        <Image x:Name="xDragImage" Source="ms-appx:///Assets/resize.png" Height="20" Opacity=".25" Margin="0,0,2,2" Stretch="None"
                                HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                    </Border>
                </Button>
            </Grid>

            <!--The selection border-->
            <Border Name="xSelectionBorder"/>
            <ProgressRing x:Name="xProgressRing" x:FieldModifier="public" Width="50" Height="50" IsActive="False" Visibility="Collapsed"/>
        </Grid>

    </Grid>
</local:SelectionElement>