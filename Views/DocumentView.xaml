<UserControl
    x:Class="Dash.DocumentView"
    x:Name="Root"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:Dash"
    xmlns:views="using:Dash.Views"
    xmlns:xaml="using:Microsoft.Graphics.Canvas.UI.Xaml"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance local:DocumentViewModel}"
    d:DesignWidth="400"
    d:DesignHeight="400"
    AllowDrop="True"
    Drop="This_Drop"
    UseLayoutRounding="False"
    
    >
    <UserControl.Resources>
        <Storyboard x:Name="FadeOut" Completed="FadeOut_Completed" SpeedRatio="0.7">
            <FadeOutThemeAnimation TargetName="Root"></FadeOutThemeAnimation>
        </Storyboard>
        <Storyboard x:Name="FadeIn" SpeedRatio="0.7">
            <DoubleAnimation
                Storyboard.TargetName="Root"
                Storyboard.TargetProperty="Opacity"
                From="0.0" To="1.0" Duration="0:0:0.2"/>
        </Storyboard>
        <local:BoolToBrushConverter x:Key="BoolToBrushConverter"/>
        <SolidColorBrush x:Key="DocumentBackground" Color="{ThemeResource DocumentBackgroundColor}"></SolidColorBrush>
    </UserControl.Resources>

    <Grid x:Name="xMasterStack">
        <Grid.RowDefinitions>
            <RowDefinition  Height="Auto"/>
            <RowDefinition  Height="*"/>
        </Grid.RowDefinitions>
        
        <!--Key Value Flyout-->
        <Border x:Name="xKeyValueBorder" Grid.Row="0" Height="0" Width="0">
            <Border.Resources>
                <Storyboard x:Name="xQuickEntryIn">
                    <DoubleAnimation 
                        Storyboard.TargetName="xKeyValueBorder"
                        Storyboard.TargetProperty="MinHeight"
                        To="60"
                        Duration="0:0:0.2"
                        EnableDependentAnimation="True"/>
                </Storyboard>
                <Storyboard x:Name="xQuickEntryOut">
                    <DoubleAnimation 
                        Storyboard.TargetName="xKeyValueBorder"
                        Storyboard.TargetProperty="MinHeight"
                        To="0"
                        Duration="0:0:0.2"
                        EnableDependentAnimation="True"/>
                </Storyboard>
                <Storyboard x:Name="xKeyEditFailure">
                    <ColorAnimation 
                        Storyboard.TargetName="xKeyBox"
                        Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
                        To="Red"
                        AutoReverse="True"
                        Duration="0:0:0.2"
                        EnableDependentAnimation="True"/>
                </Storyboard>
                <Storyboard x:Name="xValueEditFailure">
                    <ColorAnimation 
                        Storyboard.TargetName="xValueBox"
                        Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
                        To="Red"
                        AutoReverse="True"
                        Duration="0:0:0.2"
                        EnableDependentAnimation="True"/>
                </Storyboard>
                <Storyboard x:Name="xValueErrorFailure">
                    <ColorAnimation 
                        Storyboard.TargetName="xValueBox"
                        Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
                        To="Navy"
                        AutoReverse="True"
                        Duration="0:0:0.2"
                        EnableDependentAnimation="True"/>
                </Storyboard>
                <Storyboard x:Name="xKeyEditSuccess">
                    <ColorAnimation 
                        Storyboard.TargetName="xKeyBox"
                        Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
                        To="ForestGreen"
                        AutoReverse="True"
                        Duration="0:0:0.2"
                        EnableDependentAnimation="True"/>
                </Storyboard>
                <Storyboard x:Name="xValueEditSuccess">
                        <ColorAnimation 
                        Storyboard.TargetName="xValueBox"
                        Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
                        To="ForestGreen"
                        AutoReverse="True"
                        Duration="0:0:0.2"
                        EnableDependentAnimation="True"/>
                </Storyboard>
            </Border.Resources>
            <Grid>
                <Grid Margin="0, 0, 0, 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="1"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <local:ActionTextBox
                        x:Name="xKeyBox"
                        Margin="7, 0, 3, 0"
                        Padding="7, 3, 0, 0"
                        MaxLength="30"
                        Grid.Column="0"
                        AcceptsReturn="False"
                        IsSpellCheckEnabled="False"
                        Height="25"/>
                    <local:ActionTextBox
                        x:Name="xValueBox"
                        Margin="3, 0, 7, 0"
                        Padding="7, 3, 0, 0"
                        Grid.Column="2"
                        AcceptsReturn="False"
                        IsSpellCheckEnabled="False"
                        PlaceholderText="Value..."
                        Height="25"/>
                </Grid>
            </Grid>

        </Border>

           <Grid x:Name="LayoutRoot" BorderThickness="0" Grid.Row="1" SizeChanged="LayoutRoot_OnSizeChanged" PointerMoved="LayoutRoot_OnPointerMoved" IsHitTestVisible="{Binding IsNotBackgroundPinned}">
            <Grid.Clip>
                <RectangleGeometry x:Name="xContentClip" Rect="0 0 0 0"></RectangleGeometry>
            </Grid.Clip>
            <!--Context flyout for right-click context menu; this opens automatically when the DocumentView grid is right clicked and is dismissed when anything else is clicked-->
                <Grid.ContextFlyout>
                    <MenuFlyout x:Name="xMenuFlyout" Opening="XMenuFlyout_OnOpening">


                    <!--There's a MenuFlyoutItem for each clickable item in the right click menu for DocumentViews; CollectionViews will add more items to this-->

                    <MenuFlyoutItem Text="Open" Icon="OpenFile" Click="MenuFlyoutItemOpen_OnClick" />
                    <MenuFlyoutItem Text="Delete" Icon="Delete" Click="MenuFlyoutItemDelete_Click" />
                    <MenuFlyoutItem Text="Hide" Icon="Preview" Click="MenuFlyoutItemHide_Click" />

                    <MenuFlyoutSeparator />

                    <MenuFlyoutItem Text="Duplicate" Icon="Copy" Click="MenuFlyoutItemCopy_Click" />
                    <MenuFlyoutItem Text="Alias" Icon="TwoPage" Click="MenuFlyoutItemAlias_Click" />

                    <MenuFlyoutSeparator />

                    <MenuFlyoutItem Text="Fields" Icon="ShowResults" Click="MenuFlyoutItemFields_Click" />
                    <MenuFlyoutItem Text="Context" Icon="SetLockScreen" Click="MenuFlyoutItemContext_Click" />

                    <MenuFlyoutSeparator />

                    <MenuFlyoutItem Text="Pin to Presentation" Icon="Pin" Click="MenuFlyoutItemPin_Click" />
                    <MenuFlyoutItem x:Name="xAnnotationVisibility" Text="Show Annotation On Scroll" Icon="Priority" Click="ToggleAnnotationVisibility_OnClick" />
                    <!--<MenuFlyoutItem Text="Apply Template" Icon="MoveToFolder" Click="MenuFlyoutItemApplyTemplate_Click" />-->
                    <MenuFlyoutItem Text="Toggle As Adornment" Icon="Trim" Click="MenuFlyoutItemToggleAsAdornment_Click" />

                    <MenuFlyoutSeparator />

                    <MenuFlyoutItem Text="Screen Capture" Icon="WebCam" Click="MenuFlyoutItemScreenCap_Click" />
                    <MenuFlyoutItem Text="Launch App" Icon="Go" Click="MenuFlyoutLaunch_Click" />
                    <MenuFlyoutItem Text="Copy History to Clipboard" Icon="Paste" Click="MenuFlyoutItemCopyHistory_Click" />

                </MenuFlyout>
            </Grid.ContextFlyout>
            
            <Canvas x:Name="xShadowHost" HorizontalAlignment="Stretch" Visibility="Visible" VerticalAlignment="Stretch" />
            <Rectangle x:Name="xDocumentBackground" x:FieldModifier="public" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent" />
            <ContentPresenter x:Name="xContentPresenter" x:FieldModifier="public" Content="{Binding Content}" >
                <ContentPresenter.RenderTransform>
                    <TransformGroup x:Name="xContentTransform"></TransformGroup>
                </ContentPresenter.RenderTransform>
            </ContentPresenter>
        </Grid>
        <Grid x:Name="xBackgroundPinBox" Grid.Row="1" Margin="-20 -20 -20 0" Height="20" Width="20" CornerRadius="10" 
              Tapped="xBackgroundPin_Tapped" Background="#40FFFFFF" VerticalAlignment="Top"  HorizontalAlignment="Right"  
              PointerPressed="xBackgroundPin_PointerPressed"  PointerReleased="xBackgroundPin_PointerReleased" >
            <TextBlock x:Name="xBackgroundPin" Text="&#xE77A;" FontSize="18" Height="20" Width="20" FontFamily="Segoe MDL2 Assets" Foreground="Green" Padding="0"/>
        </Grid>

        <!-- border to highlight search results-->
        <Border x:Name="xDocHighlight"  Grid.Row="1"  BorderBrush="{Binding SearchHighlightBrush}" BorderThickness="{Binding SearchHighlightState}" >
            <Border.Resources>
                <Storyboard x:Name="xToRed">
                    <ColorAnimation 
                    Storyboard.TargetName="xDocHighlight"
                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                    To="DarkRed"
                    Duration="0:0:0.2"
                    EnableDependentAnimation="True"/>
                </Storyboard>
                <Storyboard x:Name="xToYellow">
                    <ColorAnimation 
                    Storyboard.TargetName="xDocHighlight"
                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                    To="Yellow"
                    Duration="0:0:0.2"
                    EnableDependentAnimation="True"/>
                </Storyboard>
            </Border.Resources>
        </Border>
    </Grid>
</UserControl>