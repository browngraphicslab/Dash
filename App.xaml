<Application
    x:Class="Dash.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Dash"
    RequestedTheme="Dark">

    <!-- Application-wide XAML stylesheet-->

    <!-- 
    HOW TO STYLE YOUR NODES
    1. All nodes should be contained in a grid or similar structure which has
    the xNodeContainerType property applied. i.e.:
    
    <Grid Style="{StaticResource xNodeContainerGrid}">
    </Grid>
    
    2. For nodes with a title, create a title textblock as follows:
    <TextBlock Style="{StaticResource xTitleStyle}">
    
    3. Create the insides of the nodes. Some additional styles are reccomended:
    <Button Style="{StaticResource xAccentButtonStyle}": displays buttons in accent color
    
    ADD AS YOU GO
    - If you're styling more than a few elements manually, you probably want to
    create a XAML style for it and apply it. If you think your style will be useful
    to others, add it to the GLOBAL section. Otherwise, create a section that entails
    the category of your styles (i.e. COLLECTION VIEW STYLES). For small, one-off styles,
    just toss them in the MISC category.
    
    - Be nice to your fellow programmers. Throw in a comment saying what the style does if
    it's not obvious frm the name. 
    
    MANIPULATION NODES
    - Add this code to every UI child element (within a given node) who you don't want the
    user to be able to move its parent node while clicking it
    <Property="ManipulationMode" Value="Scale"></Setter>
    
    -->
    <Application.Resources>
        <!-- NUMBERS, THICKNESSES -->
        <x:Double x:Key="DocumentOpacity">.9</x:Double>
        <x:Double x:Key="DefaultFontSize">12</x:Double>
        <Thickness x:Key="TextPadding">10,7,10,7</Thickness>

        <!-- COLORS -->
        <Color x:Key="WindowsBlueColor">#FF068484</Color>
        <Color x:Key="AccentGreenColor">#FF000000</Color>
        <Color x:Key="DocumentBackgroundColor">#FFFFFFFF</Color>
        <Color x:Key="DocumentBackgroundSelectedColor">#FF000000</Color>
        <Color x:Key="MainTextColor">#FF666666</Color>
        

        <!-- SOLID COLOR BRUSHES -->
        <!-- general colors -->
        <SolidColorBrush x:Key="WindowsBlue" Color="{StaticResource WindowsBlueColor}"/>
        <SolidColorBrush x:Key="TranslucentWindowsBlue" Color="#CC17477E"/>
        <SolidColorBrush x:Key="DarkWindowsBlue" Color="#cc103a6a"/>
        <SolidColorBrush x:Key="AccentGreen" Color="{StaticResource AccentGreenColor}"/>
        <SolidColorBrush x:Key="SelectedGrey" Color="{StaticResource DocumentBackgroundSelectedColor}" />
        <SolidColorBrush x:Key="OutputHandleColor" Color="{StaticResource AccentGreenColor}"/>
        <SolidColorBrush x:Key="InputHandleColor" Color="{StaticResource WindowsBlueColor}"/>
        <SolidColorBrush x:Key="DragHighlight" Color="#33A2A2A2"/>
        <SolidColorBrush x:Key="TranslucentWhite" Color="#E5FFFFFF"/>


        <!-- global colors-->
        <SolidColorBrush x:Key="MainText" Color="{StaticResource MainTextColor}"></SolidColorBrush>

        <!-- background colors -->
        <SolidColorBrush x:Key="OperatorBackground"  Color="#FF132D4B" />
        <Color x:Key="TranslucentDocumentBackgroundColor">#CCFFFFFF</Color>
        <SolidColorBrush x:Key="RadialMenuBackground" Color="{StaticResource TranslucentDocumentBackgroundColor}" />
        <SolidColorBrush x:Key="DraggerLineStroke" Color="#66007AFF"/>
        <SolidColorBrush x:Key="CollectionViewBackground" Color="Transparent"/>
        <SolidColorBrush x:Key="DocumentBackground" Color="{StaticResource DocumentBackgroundColor}" Opacity="{StaticResource DocumentOpacity}" />
        <SolidColorBrush x:Key="DocumentBackgroundOpaque" Color="{StaticResource DocumentBackgroundColor}"  />
        <SolidColorBrush x:Key="DocumentHighlightBackground" Color="{StaticResource DocumentBackgroundSelectedColor}" Opacity="{StaticResource DocumentOpacity}" ></SolidColorBrush>
        <LinearGradientBrush x:Key="DocumentGradient" EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0">
            <GradientStop Color="Transparent" Offset="0"/>
            <GradientStop Color="#FFFFFFFF" Offset="1" />
        </LinearGradientBrush>

        <!-- fonts -->
        <FontFamily x:Key="FontAwesome">ms-appx:/Assets/Fonts/FontAwesome.otf#FontAwesome</FontFamily>
        <Style TargetType="TextBlock" x:Key="xFontAwesomeIcon">
            <Setter Property="FontFamily" Value="ms-appx:/Assets/Fonts/FontAwesome.otf#FontAwesome"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Height" Value="Auto"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
        </Style>

        <!-- fontawesome icon mappings -->
        <x:String x:Key="CollectionIcon">&#xf247;</x:String>
        <x:String x:Key="DocumentIcon">&#xf0f6;</x:String>
        <x:String x:Key="DocumentPlainIcon">&#xf016;</x:String>
        <x:String x:Key="ContractArrowIcon">&#xf0d7;</x:String>
        <x:String x:Key="ExpandArrowIcon">&#xf0d8;</x:String>
        <x:String x:Key="OperatorIcon">&#xf126;</x:String>
        <x:String x:Key="SearchIcon">&#xf002;</x:String>
        <x:String x:Key="DragOutIcon">&#xf25a;</x:String>
        <x:String x:Key="FavoriteIcon">&#xf006;</x:String>

        <!-- DEFAULT STYLES-->
        <Style TargetType="Button">
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="Margin" Value="0"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
        </Style>

        <Style TargetType="PivotHeaderItem">
            <Setter Property="Margin" Value="0,0,1,1"></Setter>
            <Setter Property="Padding" Value="0"></Setter>
        </Style>
        
        <!-- gray border on textboxes -->
        <Style TargetType="TextBox">
            <!-- prevents node from moving while mouse is over UI element-->
            <Setter Property="ManipulationMode" Value="None"></Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource MainTextColor}" Opacity=".5"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource DocumentBackground}"/>
            <Setter Property="Foreground" Value="#FFDADADA"></Setter>
            <Setter Property="BorderThickness" Value="1"/>

            <Setter Property="Padding" Value="{StaticResource TextPadding}"></Setter>
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled" />
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver" />
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <!--
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlPageTextChromeBlackMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocusedOpacity}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            -->
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ButtonStates" />
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}" Opacity="{ThemeResource TextControlBackgroundRestOpacity}" Grid.Row="1" Grid.RowSpan="1"/>
                            <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="1"/>
                            <ContentPresenter x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" FontWeight="Normal" Margin="0,0,0,8" Grid.Row="0" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                            <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                            <ContentControl x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding PlaceholderText}" Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}" IsHitTestVisible="False" IsTabStop="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- gray border on combobox -->
        <Style TargetType="ComboBox">
            <!-- prevents node from moving while mouse is over UI element-->
            <Setter Property="ManipulationMode" Value="Scale"></Setter>
            <Setter Property="BorderBrush" Value="{StaticResource MainText}"/>
            <Setter Property="Background" Value="{StaticResource DocumentBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource MainText}"></Setter>
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        </Style>

        <!-- blue (default) button with white text -->
        <Style TargetType="Button" x:Key="BlueButton">
            <!-- prevents node from moving while mouse is over UI element-->
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="{StaticResource WindowsBlue}"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0,0,0,0"/>

            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        </Style>

        <!-- text styles -->
        <Style TargetType="TextBlock">
            <Setter Property="RequestedTheme" Value="Dark"></Setter>
            <Setter Property="Foreground" Value="{StaticResource MainText}"></Setter>
            <Setter Property="Padding" Value="{StaticResource TextPadding}"></Setter>
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>

        </Style>

        <Style TargetType="local:EditableTextBlock">
            <Setter Property="Foreground" Value="{StaticResource MainText}" />
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
            <Setter Property="FontFamily" Value="Segoe UI" />
        </Style>

        <!-- GLOBAL STYLES -->

        <Style TargetType="TextBox" x:Key="xSearchTextBox">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="Foreground" Value="{StaticResource MainTextColor}"></Setter>
            <Setter Property="RequestedTheme" Value="Dark"></Setter>
            <Setter Property="MinWidth" Value="14" />
            <Setter Property="MinHeight" Value="1" />
            <Setter Property="BorderBrush" Value="#66FFFFFF"></Setter>
            <Setter Property="Padding" Value="10,5"></Setter>
            <Setter Property="Foreground" Value="#FFDADADA"></Setter>
            <Setter Property="SelectionHighlightColor" Value="DarkGray" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="PointerOver">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                                           Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement"
                                                           Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAccentBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                                           Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement"
                                                           Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="BorderElement"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="BorderElement"
                            BorderBrush="{ThemeResource TextBoxButtonBorderThemeBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{ThemeResource TextBoxButtonBackgroundThemeBrush}">
                                                        <TextBlock x:Name="GlyphElement"
                                 Foreground="{ThemeResource SystemControlBackgroundChromeBlackMediumBrush}"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Center"
                                 FontStyle="Normal"
                                 FontSize="12"
                                 Text="&#xE10A;"
                                 FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                 AutomationProperties.AccessibilityView="Raw"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style x:Name="QueryButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="PointerOver">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                                           Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                           Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAccentBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                                           Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                           Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="BorderElement"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="BorderElement"
                            BorderBrush="{ThemeResource TextBoxButtonBorderThemeBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{ThemeResource TextBoxButtonBackgroundThemeBrush}">
                                                        <ContentPresenter x:Name="ContentPresenter"
                                        Content="{TemplateBinding Content}"
                                        ContentTransitions="{TemplateBinding ContentTransitions}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        AutomationProperties.AccessibilityView="Raw"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ButtonStates">
                                    <VisualState x:Name="ButtonVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton"
                                               Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ButtonCollapsed" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="BackgroundElement"
                Grid.Row="1"
                Background="{TemplateBinding Background}"
                Margin="{TemplateBinding BorderThickness}"
                Opacity="{ThemeResource TextControlBackgroundRestOpacity}"
                Grid.ColumnSpan="3"
                Grid.RowSpan="1"/>
                            <Border x:Name="BorderElement"
                Grid.Row="1"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Grid.ColumnSpan="3"
                Grid.RowSpan="1"/>
                            <ContentPresenter x:Name="HeaderContentPresenter"
                          x:DeferLoadStrategy="Lazy"
                          Visibility="Collapsed"
                          Grid.Row="0"
                          Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                          Margin="0,0,0,8"
                          Grid.ColumnSpan="3"
                          Content="{TemplateBinding Header}"
                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                          FontWeight="Normal"
                          TextWrapping="Wrap" />
                            <ScrollViewer x:Name="ContentElement"
                      Grid.Row="1"
                      HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                      VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                      IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                      IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                      Margin="{TemplateBinding BorderThickness}"
                      Padding="{TemplateBinding Padding}"
                      IsTabStop="False"
                      AutomationProperties.AccessibilityView="Raw"
                      ZoomMode="Disabled" />
                            <ContentControl x:Name="PlaceholderTextContentPresenter"
                      Grid.Row="1"
                      Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}"
                      Margin="{TemplateBinding BorderThickness}"
                      Padding="{TemplateBinding Padding}"
                      IsTabStop="False"
                      Grid.ColumnSpan="3"
                      Content="{TemplateBinding PlaceholderText}"
                      IsHitTestVisible="False"/>
                            <Button x:Name="DeleteButton"
                Grid.Row="1"
                Style="{StaticResource DeleteButtonStyle}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Margin="{ThemeResource HelperButtonThemePadding}"
                IsTabStop="False"
                Grid.Column="1"
                Visibility="Collapsed"
                FontSize="{TemplateBinding FontSize}"
                MinWidth="34"
                VerticalAlignment="Stretch"/>
                            <Button x:Name="QueryButton"
                Grid.Row="1"
                Style="{StaticResource QueryButtonStyle}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Margin="{ThemeResource HelperButtonThemePadding}"
                IsTabStop="False"
                Grid.Column="2"
                FontSize="{TemplateBinding FontSize}"
                MinWidth="34"
                VerticalAlignment="Stretch"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- app Titles -->
        <Style TargetType="TextBlock" x:Key="xTitleStyle">
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Foreground" Value="#FFCACBCF"></Setter>
            <Setter Property="Padding" Value="{StaticResource TextPadding}"></Setter>
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        </Style>
        
        

        <!-- for forcing text styles to apply -->
        <Style TargetType="TextBlock" x:Key="xForceTextBlockDefault">
            <Setter Property="Foreground" Value="{StaticResource MainText}"></Setter>
            <Setter Property="Padding" Value="{StaticResource TextPadding}"></Setter>
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        </Style>

        <!-- green accent button -->
        <Style TargetType="Button" x:Key="xAccentButtonStyle">
            <!-- prevents node from moving while mouse is over UI element-->
            <Setter Property="ManipulationMode" Value="Scale"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="{StaticResource AccentGreen}"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
        </Style>

        <!-- NODE SPECIFIC STYLES -->

        <!-- Menus -->
        <Style TargetType="Border" x:Key="xMenuItemBorder">
            <Setter Property="Background" Value="{StaticResource WindowsBlue}"></Setter>
            <Setter Property="Height" Value="45"></Setter>
            <Setter Property="Width" Value="55"></Setter>
            <Setter Property="Padding" Value="3,0"></Setter>
            <Setter Property="Margin" Value="0"></Setter>
            <Setter Property="BorderThickness" Value="0,0,1,0"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
        </Style>

        <Style TargetType="Border" x:Key="xMenuItemBorderGray">
            <Setter Property="Background" Value="Gray"></Setter>
            <Setter Property="Height" Value="45"></Setter>
            <Setter Property="Width" Value="55"></Setter>
            <Setter Property="Padding" Value="3,0"></Setter>
            <Setter Property="Margin" Value="0"></Setter>
            <Setter Property="BorderThickness" Value="0,0,1,0"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
        </Style>
        
        <Style TargetType="StackPanel" x:Key="xMenuItemStackPanel">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="0,1,0,0"></Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="xMenuItemLabel">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="Margin" Value="0,-1,0,0"></Setter>
            <Setter Property="FontSize" Value="11"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="Grid" x:Key="xMenuItemHeaderContainer">
            <Setter Property="Padding" Value="10"></Setter>
            <Setter Property="Margin" Value="0,0,0,1"></Setter>
            <Setter Property="Background" Value="{StaticResource WindowsBlue}"></Setter>
        </Style>

        <Style TargetType="Grid" x:Key="xMenuItemContainer">
            <Setter Property="Padding" Value="10"></Setter>
            <Setter Property="Margin" Value="0"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
            <Setter Property="BorderBrush" Value="#FF444444"></Setter>
            <Setter Property="Background" Value="{StaticResource DocumentBackgroundOpaque}"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="xMenuItemHeader">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Margin" Value="18,0,0,0"></Setter>
            <Setter Property="Padding" Value="7,0,0,0"></Setter>
            <Setter Property="FontSize" Value="11"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="xMenuItem">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Margin" Value="0,0,0,0"></Setter>
            <Setter Property="Padding" Value="7,0,0,0"></Setter>
            <Setter Property="FontSize" Value="11"></Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="xMenuItemExpand">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="Width" Value="18"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="xMenuItemExpandRight">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="Width" Value="18"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="xMenuItemIconType">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FontSize" Value="11"></Setter>
            <Setter Property="Width" Value="18"></Setter>
            <Setter Property="Opacity" Value=".3"></Setter>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>


        <!-- Operator View (& Links)-->
        <Style TargetType="Ellipse" x:Key="xLinkHandle">
            <Setter Property="Fill" Value="{StaticResource OutputHandleColor}" />
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="Width" Value="20"></Setter>
            <Setter Property="ManipulationMode" Value="All"></Setter>
            <Setter Property="Stroke" Value="Transparent"></Setter>
        </Style>
        <Style TargetType="Ellipse" x:Key="xInputLinkHandle">
            <Setter Property="Fill" Value="{StaticResource InputHandleColor}" />
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="Width" Value="20"></Setter>
            <Setter Property="ManipulationMode" Value="All"></Setter>
            <Setter Property="Stroke" Value="Transparent"></Setter>
        </Style>

        <!-- Collection View -->
        <Style TargetType="Button" x:Key="xBlueTextButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#DE0074FF"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="xBlueTextBoxStyle">
            <Setter Property="Foreground" Value="#DE0074FF"/>
            <Setter Property="Padding" Value="0"></Setter>
        </Style>

        <Style TargetType="FlyoutPresenter" x:Key="xFlyoutPresenterStyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#DE0074FF"/>
        </Style>
        
        <!--csv import list view-->
        <Style TargetType="ListView" x:Key="xDragAndDropListView">
            <Setter Property="ShowsScrollingPlaceholders" Value="False"/>
            <Setter Property="CanDragItems" Value="True"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="Background" Value="{StaticResource DocumentBackgroundOpaque}"/>
            <Setter Property="SelectionMode" Value="Extended"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- schema list view -->
        <Style TargetType="ListView" x:Key="xSchemaListView">
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Padding" Value="0,0,0,0" />
                        <Setter Property="MinWidth" Value="0" />
                        <Setter Property="MinHeight" Value="0" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CanDragItems" Value="True"></Setter>
            <Setter Property="CanReorderItems" Value="True"></Setter>
            <Setter Property="AllowDrop" Value="True"></Setter>
            <Setter Property="ShowsScrollingPlaceholders" Value="False"></Setter>
        </Style>

        <!--Collection Grid View-->
        <Style TargetType="GridView" x:Key="xCollectionGridViewStyle">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        </Style>

        <!--Collection List View-->
        <Style x:Key="xCollectionListViewStyle" TargetType="ListView">
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="FlowDirection" Value="LeftToRight"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Vertically scrolling Collection List View-->
        <Style x:Key="xVerticalCollectionListViewStyle" TargetType="ListView">
            <Setter Property="Background" Value="#FFE5E5E5"/>
            <Setter Property="Opacity" Value=".7"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- CONVERTERS-->
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"></local:BoolToVisibilityConverter>
        <local:BoolToBoldConverter x:Key="BoolToBoldConverter"></local:BoolToBoldConverter>
        <local:PointToTranslateTransformConverter x:Key="PointToTranslateTransformConverter"></local:PointToTranslateTransformConverter>
        <local:BoundFieldModelControllerToFrameworkElementConverter x:Key="BoundFieldModelControllerToFrameworkElementConverter"></local:BoundFieldModelControllerToFrameworkElementConverter>
        <local:ReferenceFieldModelControllerToFrameworkElementConverter x:Key="ReferenceFieldModelControllerToFrameworkElementConverter"></local:ReferenceFieldModelControllerToFrameworkElementConverter>
        <local:ObjectToStringConverter x:Key="ObjectToStringConverter"></local:ObjectToStringConverter>
        <local:TransformGroupDataToGroupTransformConverter x:Key="TransformGroupDataToGroupTransformConverter"></local:TransformGroupDataToGroupTransformConverter>
        <local:BoolToManipulationAllOrNoneConverter x:Key="BoolToManipulationAllOrNoneConverter"></local:BoolToManipulationAllOrNoneConverter>
        <!--local:DocViewModelParamToDocViewModelConverter x:Key="DocViewModelParamToViewModelConverter"></-->

        <!-- MISC. STYLES-->
        <Style TargetType="Ellipse" x:Key="xDraggerEllipseStyle">
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Fill" Value="{StaticResource TranslucentWhite}"></Setter>
            <Setter Property="Stroke" Value="{StaticResource WindowsBlue}"></Setter>
        </Style>

        <SolidColorBrush x:Key="InkToolbarButtonBackgroundThemeBrush" Color="White"/>

        <Style TargetType="RichEditBox">
            <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}" />
            <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
            <Setter Property="Foreground" Value="{StaticResource MainText}" />
            <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundAltHighBrush}" />
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource SystemControlHighlightAccentBrush}" />
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundChromeDisabledLowBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RichEditBox">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                    </VisualState>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                               Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundHoverOpacity}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="BackgroundElement"
                Grid.Row="1"
                Background="{TemplateBinding Background}"
                Margin="{TemplateBinding BorderThickness}"
                Opacity="{ThemeResource TextControlBackgroundRestOpacity}"
                Grid.ColumnSpan="2"
                Grid.RowSpan="1"/>
                            <Border x:Name="BorderElement"
                Grid.Row="1"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Grid.ColumnSpan="2"
                Grid.RowSpan="1"/>
                            <ContentPresenter x:Name="HeaderContentPresenter"
                          x:DeferLoadStrategy="Lazy"
                          Visibility="Collapsed"
                          Grid.Row="0"
                          Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                          Margin="0,0,0,8"
                          Grid.ColumnSpan="2"
                          Content="{TemplateBinding Header}"
                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                          FontWeight="Normal" />
                            <ScrollViewer x:Name="ContentElement"
                      Grid.Row="1"
                      HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                      VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                      IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                      IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                      Margin="{TemplateBinding BorderThickness}"
                      Padding="{TemplateBinding Padding}"
                      IsTabStop="False"
                      ZoomMode="Disabled"
                      AutomationProperties.AccessibilityView="Raw"/>
                            <ContentControl x:Name="PlaceholderTextContentPresenter"
                      Grid.Row="1"
                      Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}"
                      Margin="{TemplateBinding BorderThickness}"
                      Padding="{TemplateBinding Padding}"
                      IsTabStop="False"
                      Grid.ColumnSpan="2"
                      Content="{TemplateBinding PlaceholderText}"
                      IsHitTestVisible="False"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
