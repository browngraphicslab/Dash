<Application
    x:Class="Dash.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Dash"
    RequestedTheme="Light">

    <!-- Application-wide XAML stylesheet-->

    <!-- 
    HOW TO STYLE YOUR NODES
    1. All nodes should be contained in a grid or similar structure which has
    the xNodeContainerType property applied. i.e.:
    
    <Grid Style="{StaticResource xNodeContainerGrid}">
    </Grid>
    
    2. For nodes with a title, create a title textblock as follows:
    <TextBlock Style="{StaticResource xTitleStyle}">
    
    3. Create the insides of the nodes. Some additional styles are reccomended:
    <Button Style="{StaticResource xAccentButtonStyle}": displays buttons in accent color
    
    ADD AS YOU GO
    - If you're styling more than a few elements manually, you probably want to
    create a XAML style for it and apply it. If you think your style will be useful
    to others, add it to the GLOBAL section. Otherwise, create a section that entails
    the category of your styles (i.e. COLLECTION VIEW STYLES). For small, one-off styles,
    just toss them in the MISC category.
    
    - Be nice to your fellow programmers. Throw in a comment saying what the style does if
    it's not obvious frm the name. 
    
    MANIPULATION NODES
    - Add this code to every UI child element (within a given node) who you don't want the
    user to be able to move its parent node while clicking it
    <Property="ManipulationMode" Value="Scale"></Setter>
    
    -->
    <Application.Resources>
        <!-- COLORS -->
        <SolidColorBrush x:Key="WindowsBlue" Color="SteelBlue"/>
        <SolidColorBrush x:Key="TranslucentWhite" Color="#E5FFFFFF"/>
        <SolidColorBrush x:Key="AccentGreen" Color="#FF35C597"/>
        <SolidColorBrush x:Key="CollectionViewBackground" Color="Transparent"/>
        <SolidColorBrush x:Key="SelectedGrey" Color="#BFEAE8E8"></SolidColorBrush>

        
        <!-- DEFAULT STYLES-->
        <!-- gray border on textboxes -->
        <Style TargetType="TextBox">
            <!-- prevents node from moving while mouse is over UI element-->
            <Setter Property="ManipulationMode" Value="None"></Setter>
            <Setter Property="BorderBrush" Value="#FF474747"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#FF656973"></Setter>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>

        <!-- gray border on combobox -->
        <Style TargetType="ComboBox">
            <!-- prevents node from moving while mouse is over UI element-->
            <Setter Property="ManipulationMode" Value="Scale"></Setter>
            <Setter Property="BorderBrush" Value="#FF474747"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>

        <!-- blue (default) button with white text -->
        <Style TargetType="Button">
            <!-- prevents node from moving while mouse is over UI element-->
            <Setter Property="ManipulationMode" Value="Scale"></Setter> 
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="{StaticResource WindowsBlue}"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="#FF656973"></Setter>
        </Style>

        <!-- GLOBAL STYLES -->
        <!-- border & padding on node-containing elements-->
        <Style TargetType="Grid" x:Name="xNodeContainerGrid">
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Background" Value="{StaticResource TranslucentWhite}"/>
        </Style>
        <Style TargetType="StackPanel" x:Name="xNodeContainerStackPanel">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background"  Value="{StaticResource TranslucentWhite}"/>
        </Style>
        <Style TargetType="UserControl" x:Name="xNodeContainerUserControl">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background"  Value="{StaticResource TranslucentWhite}"/>
        </Style>

        <!-- app Titles -->
        <Style TargetType="TextBlock" x:Name="xTitleStyle">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Margin" Value="0,0,0,10" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>

        <!-- green accent button -->
        <Style TargetType="Button" x:Name="xAccentButtonStyle">
            <!-- prevents node from moving while mouse is over UI element-->
            <Setter Property="ManipulationMode" Value="Scale"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="{StaticResource AccentGreen}"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
        </Style>

        <!-- NODE SPECIFIC STYLES -->

        <!-- Operator View (& Links)-->
        <Style TargetType="Ellipse" x:Name="xLinkHandle">
            <Setter Property="Fill" Value="{StaticResource AccentGreen}" />
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="Width" Value="20"></Setter>
            <Setter Property="ManipulationMode" Value="All"></Setter>
            <Setter Property="Stroke" Value="Transparent"></Setter>
        </Style>
        
        <!-- Collection View -->
        <Style TargetType="Button" x:Name="xBlueTextButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#DE0074FF"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Name="xBlueTextBoxStyle">
            <Setter Property="Foreground" Value="#DE0074FF"/>
            <Setter Property="Padding" Value="0"></Setter>
        </Style>

        <Style TargetType="FlyoutPresenter" x:Name="xFlyoutPresenterStyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#DE0074FF"/>
        </Style>


        <!-- SAMPLE NODE HERE-->

        <!-- MISC. STYLES-->
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"></local:BoolToVisibilityConverter>
        <local:PointToTranslateTransformConverter x:Key="PointToTranslateTransformConverter"></local:PointToTranslateTransformConverter>
        <local:FieldModelControllerToFrameworkElementConverter x:Key="FieldModelControllerToFrameworkElementConverter"/>
    </Application.Resources>
</Application>

