<Application
    x:Class="Dash.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Dash"
    xmlns:interop="using:Windows.UI.Xaml.Interop"
    RequestedTheme="Light">

    <!-- Application-wide XAML stylesheet-->

    <!-- 
    HOW TO STYLE YOUR NODES
    1. All nodes should be contained in a grid or similar structure which has
    the xNodeContainerType property applied. i.e.:
    
    <Grid Style="{StaticResource xNodeContainerGrid}">
    </Grid>
    
    2. For nodes with a title, create a title textblock as follows:
    <TextBlock Style="{StaticResource xTitleStyle}">
    
    3. Create the insides of the nodes. Some additional styles are reccomended:
    <Button Style="{StaticResource xAccentButtonStyle}": displays buttons in accent color
    
    ADD AS YOU GO
    - If you're styling more than a few elements manually, you probably want to
    create a XAML style for it and apply it. If you think your style will be useful
    to others, add it to the GLOBAL section. Otherwise, create a section that entails
    the category of your styles (i.e. COLLECTION VIEW STYLES). For small, one-off styles,
    just toss them in the MISC category.
    
    - Be nice to your fellow programmers. Throw in a comment saying what the style does if
    it's not obvious frm the name. 
    
    MANIPULATION NODES
    - Add this code to every UI child element (within a given node) who you don't want the
    user to be able to move its parent node while clicking it
    <Property="ManipulationMode" Value="Scale"></Setter>
    
    -->
    <Application.Resources>
        <!-- COLORS -->
        <SolidColorBrush x:Key="WindowsBlue" Color="#FF0078D7"/>
        <SolidColorBrush x:Key="TranslucentWhite" Color="#E5FFFFFF"/>
        <SolidColorBrush x:Key="AccentGreen" Color="#FF35C597"/>
        <SolidColorBrush x:Key="CollectionViewBackground" Color="Transparent"/>
        <SolidColorBrush x:Key="SelectedGrey" Color="#BFEAE8E8"></SolidColorBrush>

        
        <!-- DEFAULT STYLES-->
        <!-- gray border on textboxes -->
        <Style TargetType="TextBox">
            <!-- prevents node from moving while mouse is over UI element-->
            <Setter Property="ManipulationMode" Value="None"></Setter>
            <Setter Property="BorderBrush" Value="#FF474747"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#FF656973"></Setter>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>

        <!-- gray border on combobox -->
        <Style TargetType="ComboBox">
            <!-- prevents node from moving while mouse is over UI element-->
            <Setter Property="ManipulationMode" Value="Scale"></Setter>
            <Setter Property="BorderBrush" Value="#FF474747"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>

        <!-- blue (default) button with white text -->
        <Style TargetType="Button">
            <!-- prevents node from moving while mouse is over UI element-->
            <Setter Property="ManipulationMode" Value="Scale"></Setter> 
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="{StaticResource WindowsBlue}"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="#FF656973"></Setter>
        </Style>

        <!-- GLOBAL STYLES -->
        <!-- border & padding on node-containing elements-->
        <Style TargetType="Grid" x:Key="xNodeContainerGrid">
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Background" Value="{StaticResource TranslucentWhite}"/>
        </Style>
        <Style TargetType="StackPanel" x:Key="xNodeContainerStackPanel">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background"  Value="{StaticResource TranslucentWhite}"/>
        </Style>
        <Style TargetType="UserControl" x:Key="xNodeContainerUserControl">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background"  Value="{StaticResource TranslucentWhite}"/>
        </Style>

        <!-- app Titles -->
        <Style TargetType="TextBlock" x:Key="xTitleStyle">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Margin" Value="0,0,0,10" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>

        <!-- green accent button -->
        <Style TargetType="Button" x:Key="xAccentButtonStyle">
            <!-- prevents node from moving while mouse is over UI element-->
            <Setter Property="ManipulationMode" Value="Scale"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="{StaticResource AccentGreen}"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
        </Style>

        <!-- NODE SPECIFIC STYLES -->

        <!-- Operator View (& Links)-->
        <Style TargetType="Ellipse" x:Key="xLinkHandle">
            <Setter Property="Fill" Value="{StaticResource AccentGreen}" />
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="Width" Value="20"></Setter>
            <Setter Property="ManipulationMode" Value="All"></Setter>
            <Setter Property="Stroke" Value="Transparent"></Setter>
        </Style>
        
        <!-- Collection View -->
        <Style TargetType="Button" x:Key="xBlueTextButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#DE0074FF"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="xBlueTextBoxStyle">
            <Setter Property="Foreground" Value="#DE0074FF"/>
            <Setter Property="Padding" Value="0"></Setter>
        </Style>

        <Style TargetType="FlyoutPresenter" x:Key="xFlyoutPresenterStyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#DE0074FF"/>
        </Style>

        <!--Collection Grid View--> 
        <Style TargetType="GridView" x:Key="xCollectionGridViewStyle">
            <Setter Property="Background" Value="#FFE5E5E5"/>
            <Setter Property="Opacity" Value=".7"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        </Style>

        <!--Collection List View-->
        <Style x:Key="xCollectionListViewStyle" TargetType="ListView">
            <Setter Property="Background" Value="#FFE5E5E5"/>
            <Setter Property="Opacity" Value=".7"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="FlowDirection" Value="LeftToRight"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"></local:BoolToVisibilityConverter>
        <local:PointToTranslateTransformConverter x:Key="PointToTranslateTransformConverter"></local:PointToTranslateTransformConverter>
        <local:FieldModelControllerToFrameworkElementConverter x:Key="FieldModelControllerToFrameworkElementConverter"></local:FieldModelControllerToFrameworkElementConverter>
        <local:TransformGroupDataToGroupTransformConverter x:Key="TransformGroupDataToGroupTransformConverter"></local:TransformGroupDataToGroupTransformConverter>
        <local:WidthBindingToDoubleConverter x:Key="WidthBindingToDoubleConverter"></local:WidthBindingToDoubleConverter>
        <local:BoolToManipulationAllOrNoneConverter x:Key="BoolToManipulationAllOrNoneConverter"></local:BoolToManipulationAllOrNoneConverter>
        <local:DocumentControllerToViewModelConverter x:Key="DocumentControllerToViewModelConverter"></local:DocumentControllerToViewModelConverter>

        <!-- SAMPLE NODE HERE-->

        <!-- MISC. STYLES-->
        <Style TargetType="Ellipse" x:Key="xDraggerEllipseStyle">
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Fill" Value="{StaticResource TranslucentWhite}"></Setter>
            <Setter Property="Stroke" Value="{StaticResource WindowsBlue}"></Setter>
        </Style>
        
        <!--TODO what is this doing here-->
        <ItemsPanelTemplate x:Key="ListViewLayoutTemplate">
            <DataTemplate>
                <StackPanel Orientation="Vertical"></StackPanel>
            </DataTemplate>
        </ItemsPanelTemplate>

        <Style x:Key="xPlainTextBox" TargetType="TextBox">
            <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundAltHighBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundChromeDisabledLowBrush}"/>
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled" />
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver" />
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlPageTextChromeBlackMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocusedOpacity}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ButtonStates" />
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}" Opacity="{ThemeResource TextControlBackgroundRestOpacity}" Grid.Row="1" Grid.RowSpan="1"/>
                            <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="1"/>
                            <ContentPresenter x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" FontWeight="Normal" Margin="0,0,0,8" Grid.Row="0" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                            <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                            <ContentControl x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding PlaceholderText}" Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}" IsHitTestVisible="False" IsTabStop="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>

